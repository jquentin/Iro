using UnityEngine;
using System.Collections;

[RequireComponent(typeof(GoogleAnalyticsV3))]
public class GASingleton : MonoBehaviour {

	static string _deviceModel = null;
	static string deviceModel
	{
		get
		{
			if (_deviceModel == null)
				_deviceModel = SystemInfo.deviceModel;
			return _deviceModel;
		}
	}

	private static GoogleAnalyticsV3 _instance;
	public static GoogleAnalyticsV3 instance
	{
		get
		{
			if (_instance == null)
			{
				GameObject go = new GameObject ("GAv3_autogenerated");
				_instance = go.AddComponent<GoogleAnalyticsV3>();
				_instance.androidTrackingCode = TigglyConstants.instance.analyticsTrackingCode;
				_instance.IOSTrackingCode = TigglyConstants.instance.analyticsTrackingCode;
				_instance.otherTrackingCode = TigglyConstants.instance.analyticsTrackingCode;
				_instance.productName = TigglyConstants.tigglyApp.appCodeName;
				_instance.bundleVersion = TigglyConstants.instance.appVersion;
				_instance.bundleIdentifier = TigglyConstants.tigglyApp.bundleId;
				_instance.StartSession();
				go.AddComponent<GASingleton>();
			}
			return _instance;
		}
	}

	void Awake () 
	{
//		_instance = GetComponent<GoogleAnalyticsV3>();
//		_instance.StartSession();
		DontDestroyOnLoad(gameObject);
	}

	public static void LogGameEvent(string action, string label, long value)
	{
		if (instance != null)
			instance.LogEvent(GAConstants.CAT_GAME, action, label, value);
	}
	
	public static void LogMenuEvent(string action, string label, long value)
	{
#if !DISABLE_DEFAULT_ANALYTICS
		if (instance != null)
			instance.LogEvent(GAConstants.CAT_MENU, action, label, value);
#endif
	}
	
	public static void LogEvent( string category, string action, string label, long theValue = 0L )
	{
		if ( instance != null )
		{
			instance.LogEvent( 
				new EventHitBuilder()
				.SetEventCategory(category)
				.SetEventAction(action)
				.SetEventLabel(label)
				.SetEventValue(theValue)
				.SetCustomDimension(1, deviceModel));
		}
	}
	
	public static void LogScreen( string name )
	{
		if ( instance != null )
		{
			instance.LogScreen( new AppViewHitBuilder().SetScreenName(name).SetCustomDimension(1, deviceModel) );
		}
	}
}

